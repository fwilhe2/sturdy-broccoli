{"version":3,"file":"index.js","sources":["../webpack://@fwilhe2/sturdy-broccoli/./lib/cron.js","../webpack://@fwilhe2/sturdy-broccoli/./lib/main.js","../webpack://@fwilhe2/sturdy-broccoli/webpack/bootstrap","../webpack://@fwilhe2/sturdy-broccoli/webpack/runtime/compat","../webpack://@fwilhe2/sturdy-broccoli/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cronToHuman = void 0;\nfunction cronToHuman(cron) {\n    const parts = cron.split(\" \");\n    if (parts.length != 5) {\n        throw Error(\"invalid format in string: \" + cron);\n    }\n    const timeUnit = [\"minute\", \"hour\", \"day of the month\", \"month\", \"weekday\"];\n    let result = \"\";\n    parts.forEach((element, index) => {\n        if (element === \"*\") {\n            result += `every ${timeUnit[index]} `;\n        }\n        const potentialNumber = Number(element);\n        if (!isNaN(potentialNumber)) {\n            result += `${element} ${timeUnit[index]} `;\n        }\n        if (/\\*\\/(\\d)/.test(element)) {\n            result += `every ${RegExp.$1}th ${timeUnit[index]} `;\n        }\n    });\n    return result;\n}\nexports.cronToHuman = cronToHuman;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cron_1 = require(\"./cron\");\nconsole.log(cron_1.cronToHuman(process.argv[2]));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\n__webpack_require__.ab = __dirname + \"/\";","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(109);\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;A;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;ACDA;AACA;AACA;AACA;;A","sourceRoot":""}